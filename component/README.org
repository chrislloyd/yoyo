* Component - Yo-yo module

A small Yo-yo module to embed Components/Component systems into a
Yo-yo system.

** Dependency

#+BEGIN_SRC clojure
  [jarohen/yoyo.component "0.0.1"]
#+END_SRC

** Usage

*** Component in Yo-yo

For an individual Component:

#+BEGIN_SRC clojure
  (:require [yoyo.component :as yc])

  (yc/with-component (map->MyComponent {...})
    (fn [started-component]
      ;; next turtle
      ))
#+END_SRC

The component will be started before being passed to this function,
and stopped afterwards.

For a whole system:

#+BEGIN_SRC clojure
  (:require [yoyo.component :as yc]
            [com.stuartsierra.component :as c])

  (yc/with-component-system (c/system-map
                              ...)
    (fn [started-system]
      ;; next turtle
      ))
#+END_SRC

Likewise, the system will be started before being passed to that
function, and stopped afterwards.

*** Yo-yo in Component

You can also pull a Yo-yo module into a Component system using this
libary:

#+BEGIN_SRC clojure
  (:require [yoyo.component :as yc]
            [com.stuartsierra.component :as c])

  (defn with-db-pool [db-opts f]
    (let [db-pool (...)]
      (try
        (f db-pool)

        (finally
          ;; stop pool
          ))))

  (defn make-db-pool-component [db-opts]
    (yc/->YoyoComponent #(with-db-pool db-opts %)))


  ;; Usage:
  (let [started-system (-> (c/system-map
                             :yoyo-db-pool (make-db-pool-component ...)
                             ;; ...
                             )
                           (c/start-system))

        db-pool (get-in started-system [:yoyo-db-pool :yoyo-component])]

    ;; ...

    (c/stop-system started-system))
#+END_SRC
